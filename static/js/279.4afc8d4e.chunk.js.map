{"version":3,"file":"static/js/279.4afc8d4e.chunk.js","mappings":"4MACA,EAAuB,0BAAvB,EAA6D,+BAA7D,EAAwG,+BAAxG,EAAsJ,kCAAtJ,EAAiM,4B,4BCIpLA,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,QAAnB,IAC5BG,GAAWC,EAAAA,EAAAA,MAcjB,OACE,kBAAMC,UAAWC,EAAUC,SAbR,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OAAOD,KAAKE,MACrBC,EAAQL,EAAEG,OAAOG,OAAOF,MAC1BZ,EAASe,MAAK,SAAAC,GAAO,OAAIA,EAAQN,OAASA,CAArB,IACvBO,MAAM,GAAD,OAAIP,EAAJ,6BAGPP,GAASe,EAAAA,EAAAA,IAAW,CAAER,KAAAA,EAAMG,MAAAA,KAC5BL,EAAEG,OAAOQ,QACV,EAGC,WACE,8BACE,cAAGd,UAAWC,EAAd,SAA6B,UAC7B,kBACEc,KAAK,OACLV,KAAK,OACLW,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRlB,UAAWC,QAIf,8BACE,cAAGD,UAAWC,EAAd,SAA6B,YAC7B,kBACEc,KAAK,MACLV,KAAK,SACLW,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRlB,UAAWC,QAGf,gBAAKD,UAAWC,EAAhB,UACE,mBAAQD,UAAWC,EAAYc,KAAK,SAApC,SAA6C,oBAMpD,ECpDD,EAA4B,0BAA5B,EAAoE,4BCGvDI,EAAS,WACpB,IAAMrB,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iCACE,cAAGC,UAAWC,EAAd,SAA+B,0BAC/B,kBACEc,KAAK,OACLK,YAAY,kBACZC,SAXe,SAAAlB,GACnB,IAAMmB,EAAcnB,EAAEG,OAAOC,MAC7BT,GAASyB,EAAAA,EAAAA,IAAUD,GACpB,EASKtB,UAAWC,MAIlB,ECtBD,EAAuB,0BAAvB,EAA6D,+BCIhDuB,EAAc,WACzB,IAAM7B,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,QAAnB,IAC5B8B,GAAS7B,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAAS8B,MAAnB,IAC1B3B,GAAWC,EAAAA,EAAAA,MAKX2B,EAAmB/B,EAAS8B,QAAO,SAAAd,GAAO,OAC9CA,EAAQN,KAAKsB,cAAcC,SAASH,EAAOE,cADG,IAIhD,OACE,wBACGD,EAAiBG,KAAI,SAAAlB,GAAO,OAC3B,gBAAIX,UAAWC,EAAf,UACGU,EAAQN,KAAK,MAAIM,EAAQF,QAC1B,mBACET,UAAWC,EACX6B,QAAS,kBAdEC,EAciBpB,EAAQoB,QAb5CjC,GAASkC,EAAAA,EAAAA,IAAcD,IADJ,IAAAA,CAcF,EAFX,SAGC,aAL2BpB,EAAQoB,GADX,KAalC,EC/BD,EAA0B,wBCCbE,EAAS,kBACpB,iBAAKjC,UAAWC,EAAhB,UACG,KACD,oBACA,oBACA,oBACA,oBACA,oBACA,qBARkB,ECSP,SAASiC,IACtB,IAAMC,GAAUvC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASyC,SAAnB,IAC3BtC,GAAWC,EAAAA,EAAAA,MAIjB,OAHAsC,EAAAA,EAAAA,YAAU,WACRvC,GAASwC,EAAAA,EAAAA,MACV,GAAE,CAACxC,KAEF,iCACE,UAACyC,EAAA,EAAD,YACE,2BAAO,eAAmB,QAE5B,wBAAI,eACJ,SAAC7C,EAAD,KACA,wBAAI,cACJ,SAACyB,EAAD,IACCgB,GAAU,SAACF,EAAD,KAAa,SAACT,EAAD,MAG7B,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","pages/Phonebook.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formTitle\":\"ContactForm_formTitle__N6O4g\",\"formInput\":\"ContactForm_formInput__GszVU\",\"subBtnCenter\":\"ContactForm_subBtnCenter__DpFef\",\"subBtn\":\"ContactForm_subBtn__9Zeq9\"};","import PropTypes from 'prop-types';\nimport css from './ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'Redux/CreateAction';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(state => state.contacts.contacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const phone = e.target.number.value;\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact({ name, phone }));\n    e.target.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label>\n        <p className={css.formTitle}>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className={css.formInput}\n        />\n      </label>\n\n      <label>\n        <p className={css.formTitle}>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className={css.formInput}\n        />\n      </label>\n      <div className={css.subBtnCenter}>\n        <button className={css.subBtn} type=\"submit\">\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formInput\":\"Filter_formInput__XNLZn\",\"filterTitle\":\"Filter_filterTitle__5SDqd\"};","import css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'Redux/CreateAction';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    const filterValue = e.target.value;\n    dispatch(setFilter(filterValue));\n  };\n\n  return (\n    <>\n      <p className={css.filterTitle}>Find contact by name</p>\n      <input\n        type=\"text\"\n        placeholder=\"Search contacts\"\n        onChange={handleFilter}\n        className={css.formInput}\n      />\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\",\"btnDelete\":\"ContactList_btnDelete__Eeo9v\"};","import css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeContact } from 'Redux/CreateAction';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(removeContact(id));\n  };\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul>\n      {filteredContacts.map(contact => (\n        <li className={css.item} key={contact.id}>\n          {contact.name} - {contact.number}\n          <button\n            className={css.btnDelete}\n            onClick={() => handleDelete(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"Loader_spinner__iDFIv\",\"spinner-y0fdc1\":\"Loader_spinner-y0fdc1__D52ZC\"};","import css from './Loader.module.css';\n\nexport const Loader = () => (\n  <div className={css.spinner}>\n    {' '}\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'Redux/CreateAction';\nimport { Loader } from 'components/Loader/Loader';\n\n\nexport default function Phonebook() {\n  const loading = useSelector(state => state.contacts.isLoading);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>{' '}\n      </Helmet>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {loading ? <Loader /> : <ContactList />}\n    </>\n  );\n}\n"],"names":["ContactForm","contacts","useSelector","state","dispatch","useDispatch","className","css","onSubmit","e","preventDefault","name","target","value","phone","number","find","contact","alert","addContact","reset","type","pattern","title","required","Filter","placeholder","onChange","filterValue","setFilter","ContactList","filter","filteredContacts","toLowerCase","includes","map","onClick","id","removeContact","Loader","Phonebook","loading","isLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}